<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Arch虚拟机的一个小问题</title>
    <link href="/2024/08/02/arch-vm/"/>
    <url>/2024/08/02/arch-vm/</url>
    
    <content type="html"><![CDATA[<p>第一次使用VMware安装Arch时你可能会感到一些不方便，即使你会输入如下命令安装了vm-tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S open-vm-tools<br></code></pre></td></tr></table></figure><p>仍然不起作用</p><p>独自起一片小文章提示需要手动启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start vmtoolsd<br>systemctl <span class="hljs-built_in">enable</span> vmtoolsd<br></code></pre></td></tr></table></figure><p>这样桌面就自适应了吧</p><h3 id="顺便讲一下设置中文的方法"><a href="#顺便讲一下设置中文的方法" class="headerlink" title="顺便讲一下设置中文的方法"></a>顺便讲一下设置中文的方法</h3><p>安装中文字体</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S noto-fonts-cjk<br></code></pre></td></tr></table></figure><p>安装完后浏览器就没有乱码了</p><p>但是还没有启用中文，需要手动启用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> nano /etc/locale.gen<br></code></pre></td></tr></table></figure><p>Ctrl+W搜索zh_cn</p><p>把搜到的zh_cn开头的#号字符去掉，Ctrl+o回车保存，Ctrl+x退出</p><p>执行命令<code>locale-gen</code></p><p>完成后注销，再登录</p><p>进入设置点击Language（也是语言的意思）选择中文即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装Fcitx5输入法</title>
    <link href="/2024/08/02/fcitx/"/>
    <url>/2024/08/02/fcitx/</url>
    
    <content type="html"><![CDATA[<p>当你第一次使用Linux发行版时，你应该会感到输入中文的困难，即使部分Linux发行版自带了ibus输入法，你也会觉得不如在Windows上的输入法好用，这里介绍另一种输入法——Fcitx5</p><blockquote><p>如果你正在使用 Ubuntu ，你应该先在设置中打开「区域与语言」— 「管理已安装的语言」，系统会自动检查语言环境完整性，一般情况不需要任何操作，如果提示环境不完整，点击安装即可。<br>安装完成后建议注销一遍</p></blockquote><h3 id="Debian发行版"><a href="#Debian发行版" class="headerlink" title="Debian发行版"></a>Debian发行版</h3><h2 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk3 fcitx5-frontend-gtk2 fcitx5-frontend-qt5 im-config<br></code></pre></td></tr></table></figure><p>如果你嫌麻烦，这有一个一劳永逸的方法，但不建议使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install fcitx5*  <span class="hljs-comment">#  在bash命令行里有效，这会安装所有有关Fcitx5的所有软件包</span><br></code></pre></td></tr></table></figure><p>配置设置为默认输入法</p><p>使用 im-config 工具可以配置首选输入法，在任意命令行输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">im-config<br></code></pre></td></tr></table></figure><p>根据弹出窗口的提示，将首选输入法设置为 Fcitx 5 即可。</p><hr><h3 id="Arch发行版"><a href="#Arch发行版" class="headerlink" title="Arch发行版"></a>Arch发行版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S fcitx5 fcitx5-im fcitx5-configtool<br></code></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>需要为桌面会话设置环境变量，即将以下配置项写入某一配置文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> XMODIFIERS=@im=fcitx<br><span class="hljs-built_in">export</span> GTK_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> QT_IM_MODULE=fcitx<br></code></pre></td></tr></table></figure><p>如果使用 Bash 作为 shell，则建议写入至 ~&#x2F;.bash_profile，这样只对当前用户生效，而不影响其他用户。</p><p>另一个可以写入此配置的文件为系统级的 &#x2F;etc&#x2F;profile。</p><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>安装 Fcitx 5 后不会自动添加到开机自启动中，如果没有设置好需要每次开机后需要手动在应用程序中找到并启动。</p><p>如果你是GNOME用户，你需要安装Tweaks</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install gnome-tweaks<br></code></pre></td></tr></table></figure><p>将 Fcitx 5 添加到「开机启动程序」列表中即可。</p><p>Fcitx 5 提供了一个基于 Qt 的强大易用的 GUI 配置工具，可以对输入法功能进行配置。有多种启动该配置工具的方法：</p><ol><li>在应用程序列表中打开「Fcitx 配置」</li><li>在 Fcitx 托盘上右键打开「设置」</li><li>命令行命令 fcitx5-configtool</li></ol><blockquote><p>根据个人偏好进行设置即可。需要注意的是「输入法」标签页下，应将「键盘 - 英语」放在首位，拼音（或其他中文输入法）放在后面的位置。</p></blockquote><h2 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h2><p>Fcitx 5 默认的外观比较朴素，用户可以根据喜好使用自定义主题。</p><p>第一种方式为使用经典用户界面，可以在 GitHub 搜索主题，然后在 Fcitx5 configtool —— 「附加组件」 —— 「经典用户界面」中设置即可。</p><p>第二种方式为使用<code>Kim面板</code>，一种基于 DBus 接口的用户界面。此处安装了 Input Method Panel 这个 GNOME 扩展，黑色的风格与正在使用的 GNOME 主题 Orchis-dark 非常搭配。</p><h2 id="GNOME的一些小问题"><a href="#GNOME的一些小问题" class="headerlink" title="GNOME的一些小问题"></a>GNOME的一些小问题</h2><p>如果你使用的是GNOME桌面，建议你看看这一栏</p><p>GNOME默认没有顶栏图标，而输入法却依赖顶栏图标，你需要安装扩展程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install gnome-shell-extensions<br></code></pre></td></tr></table></figure><p>理论上Arch用户只需要把<code>apt install</code>换成<code>pacman -S</code>即可</p><p>打开<a href="https://extensions.gnome.org/extension/615/appindicator-support/">网站</a>安装AppIndicator and KStatusNotifierItem Support，点击Install按提示安装即可</p><p>打开GNOME应用菜单，点击扩展，启动AppIndicator and KStatusNotifierItem Support即可</p><blockquote><p>建议用系统安装自带的浏览器安装</p></blockquote><p>注销重新登陆</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Tremux搭建hexo博客</title>
    <link href="/2024/07/24/termux_hexo/"/>
    <url>/2024/07/24/termux_hexo/</url>
    
    <content type="html"><![CDATA[<blockquote><p>建议使用真正的服务器去搭建网站，搭建这个项目建议使用电脑，最好是Linux</p></blockquote><p>尽管如此，你还是想要在手机上体验创建博客呢？</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>手机系统：Android 5+</p><p>软件：<a href="https://f-droid.org/zh_Hans/packages/com.termux/">Tremux</a></p><p>合适的网络环境</p><blockquote><p>部分手机第一次打开软件会出现报错，建议进入软件设置，清除软件数据。如果问题仍旧，说明手机权限过于严格，软件无法写入&#x2F;data&#x2F;data目录，至此，你只能<a href="https://baidu.com/">放弃</a>去做这件事了。</p></blockquote><h2 id="软件更新"><a href="#软件更新" class="headerlink" title="软件更新"></a>软件更新</h2><p>幸运的你通过安装的第一关</p><p>打开后就是一屏幕的Linux终端界面</p><blockquote><p>如果你面对这屏幕惊慌失措，说明你可能不适合搭建博客&#x2F;网站。如果你执意或急需要搭建博客，你照做教程之后你应该学习一些有关 计算机&#x2F;Linux&#x2F;网站部署 之类的知识</p></blockquote><p>这应用程序模拟了Debian Linux的终端，意味着可以使用特别的 <code>apt</code> 命令，不过软件准备了 <code>pkg</code> 命令，在首次执行时可以自动执行一次软件更新 <code>apt update</code> </p><blockquote><p>你可能学习过有关Debian系统的操作，在这声明，一般情况Tremux执行操作不需要在命令前加上sudo</p></blockquote><p>termux的默认软件源服务器在海外，你可能需要更换到国内源。</p><p>一条命令让你进入换源图形界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">termux-chabge-repo<br></code></pre></td></tr></table></figure><p>0.119版本选择 <code>mirror group</code> ，应该只要直接回车。进入二级菜单选择 <code>Mirrors in Chinese Mainland</code> ，方向键按下键选， <code>空格选择，回车保存</code> </p><p>如果你觉得你手法不错，你也可以直接点击选项，选好了点ok即可</p><p>软件会进行一次软件更新，之后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt upgrade   <span class="hljs-comment">#后面可以加上  (空格) -y</span><br></code></pre></td></tr></table></figure><p>如果你使用了比较旧的软件或0.118版，你最好升级到最新版本，目前截止至文章编写时软件版本是0.118，测试版是0.119</p><p>或者直接执行下面的命令更换，如果你不想用图形操作，0.119版本用户也可以这么做</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main@&#x27;</span> <span class="hljs-variable">$PREFIX</span>/etc/apt/sources.list<br>apt update &amp;&amp; apt upgrade    <span class="hljs-comment"># 升级软件包，有选择的一般输入y回车即可</span><br></code></pre></td></tr></table></figure><p>0.118需要重启软件，输入 <code>exit</code> 回车（有时不需要）或者下拉通知栏，单击termux的通知，点击exit，建议不要从任务视图划掉，进入后还需要从新执行一次换源命令</p><h2 id="安装博客软件"><a href="#安装博客软件" class="headerlink" title="安装博客软件"></a>安装博客软件</h2><p>教程使用博客软件Hexo为例，这个网站也是用Hexo做的</p><p>Hexo依赖nodejs，需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install nodejs<br></code></pre></td></tr></table></figure><p>下载Hexo时可能需要用到Git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install git<br></code></pre></td></tr></table></figure><p>合起来就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install nodejs git<br></code></pre></td></tr></table></figure><hr><p>待会用到文本编辑器，一般情况已经安装了nano文本编辑器，其他教程提到使用vim编辑器，不过除了软件开发者（默哀已经逝世的vim开发者）没有人不能在不依靠任何人的帮助下退出软件，不信你现在安装试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install vim<br></code></pre></td></tr></table></figure><p>启动vim只需直接输入vim即可</p><p>要退出vim，输入英文冒号 <code>:</code> 再输入 <code>q</code> 回车就行了</p><hr><p>废话不多说继续话题</p><p>新建一个文件夹，并切换到刚刚新建的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> （你想要的文件名）  &amp;&amp; <span class="hljs-built_in">cd</span> （你刚刚新建文件夹的名字）<br></code></pre></td></tr></table></figure><p>目录最好没有中文，你可以用数字或字母</p><p>安装hexo</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-cli -g<br>npm <span class="hljs-keyword">install</span> hexo-deployer-git --save  <span class="hljs-comment">#  git插件，如果你要部署到GitHub你应该执行这条命令</span><br></code></pre></td></tr></table></figure><p>之后你可以尝试启动了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>出现了localhost:4000时，你可以去浏览器访问这个地址或者是127.0.0.1:4000</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>以fluid主题为例，本博客也是用fluid主题</p><p>下载主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>在博客目录下创建 _config.fluid.yml，从官网复制专门的<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a>代码输入进刚刚创建的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano _config.fluid.yml<br></code></pre></td></tr></table></figure><p>长按点击PASTE粘贴，Ctrl+o回车保存ctrl+x退出</p><p>用文本编辑器编辑_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano _config.yml<br></code></pre></td></tr></table></figure><p>ctrl+w输入landscape，改成fluid，ctrl+w输入lang，把后面的en改成zh_CN，Ctrl+x回车，输入y后按回车退出</p><p>启动服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>打开地址看成果吧</p><h2 id="部署到-github"><a href="#部署到-github" class="headerlink" title="部署到 github"></a>部署到 github</h2><p>新建 github 仓库，仓库名为 用户名.github.io</p><p>安装openssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install openssh<br></code></pre></td></tr></table></figure><p>安装 git 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>在博客目录下修改 _config.yml 配置文件，添加上述仓库地址：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> git@github.com:your_repo_address<br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><p>添加ssh连接时得输入官方要求的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;yourname&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>之后添加rsa密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>查看输出内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /data/data/com.termux/files/home/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>之后你需要在GitHub里添加rsa密钥，具体这不展示了，如果你不会，你可能不太适合搭建网站，执意要搭建的建议自己摸索</p><p>远端部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo c &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>访问 <code>GitHub用户名.github.io</code> 就看到自己的网站了</p>]]></content>
    
    
    
    <tags>
      
      <tag>termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
